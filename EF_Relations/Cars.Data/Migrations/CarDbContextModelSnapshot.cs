// <auto-generated />
using Cars.Data;
using Cars.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Cars.Data.Migrations
{
    [DbContext(typeof(CarDbContext))]
    partial class CarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cars.Data.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Doors");

                    b.Property<int>("EngineId");

                    b.Property<int>("LicensePlateId");

                    b.Property<int>("MakeId");

                    b.Property<string>("Model");

                    b.Property<DateTime>("ProductionYear");

                    b.Property<int>("Transmission");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.HasIndex("MakeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Cars.Data.Models.CarDealership", b =>
                {
                    b.Property<int>("CarId");

                    b.Property<int>("DealershipId");

                    b.HasKey("CarId", "DealershipId");

                    b.HasIndex("DealershipId");

                    b.ToTable("CarDealership");
                });

            modelBuilder.Entity("Cars.Data.Models.Dealership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Dealerships");
                });

            modelBuilder.Entity("Cars.Data.Models.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Capacity");

                    b.Property<int>("Cyllinders");

                    b.Property<int>("FuelType");

                    b.Property<int>("Horsepower");

                    b.Property<string>("Make");

                    b.HasKey("Id");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("Cars.Data.Models.LicensePlate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarId");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("LicencePlates");
                });

            modelBuilder.Entity("Cars.Data.Models.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Makes");
                });

            modelBuilder.Entity("Cars.Data.Models.Car", b =>
                {
                    b.HasOne("Cars.Data.Models.Engine", "Engine")
                        .WithMany("Cars")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cars.Data.Models.Make", "Make")
                        .WithMany("Cars")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cars.Data.Models.CarDealership", b =>
                {
                    b.HasOne("Cars.Data.Models.Car", "Car")
                        .WithMany("CarDealerships")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cars.Data.Models.Dealership", "Dealership")
                        .WithMany("CarDealerships")
                        .HasForeignKey("DealershipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cars.Data.Models.LicensePlate", b =>
                {
                    b.HasOne("Cars.Data.Models.Car", "Car")
                        .WithOne("LicensePlate")
                        .HasForeignKey("Cars.Data.Models.LicensePlate", "CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
